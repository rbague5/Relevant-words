{"zip_safe": false, "name": "swat", "version": "1.8.1", "description": "SAS Scripting Wrapper for Analytics Transfer (SWAT)", "long_description": "\n# SAS Scripting Wrapper for Analytics Transfer (SWAT)\n## Overview\n\nThe **SAS SWAT** package is a Python interface to the **SAS Cloud Analytic \nServices (CAS)** engine (the centerpiece of the \n[SAS Viya](http://www.sas.com/en_us/software/viya.html) framework).\nWith this package, you can load and analyze data sets of any size on your\ndesktop or in the cloud.  Since **CAS** can be used on a local desktop\nor in a hosted cloud environment, you can analyze extremely large data \nsets using as much processing power as you need, while still retaining \nthe ease-of-use of Python on the client side.\n\nUsing **SWAT**, you can execute workflows of **CAS** analytic actions,\nthen pull down the summarized data to further process on the client side\nin Python, or to merge with data from other sources using familiar\n[Pandas](http://pandas.pydata.org) data structures.  In fact, the \n**SWAT** package mimics much of the API of the Pandas package so that\nusing CAS should feel familiar to current Pandas users.\n\nWith the best-of-breed **SAS** analytics in the cloud and the use of\nPython and its large collection of open source packages, the **SWAT**\npackage gives you access to the best of both worlds.\n\nTo view updates to this project see the [Change Log](https://github.com/sassoftware/python-swat/blob/master/CHANGELOG.md).\n\n# Prerequisites\n\nTo access the CAS binary protocol (recommended), you need the following:\n\n* **64-bit** Python 2.7.x or 3.5+ on Windows or Linux (see shared library notes below)\n\nThe binary protocol requires pre-compiled components found in the\n`pip` installer only.  These pieces are not available as source code and\nare under a separate license (see documentation on SAS TK).  The binary protocol\noffers better performance than REST, especially when transferring larger\namounts of data.  It also offers more advanced data loading from the client\nand data formatting features.\n\nTo access the CAS REST interface only, you can use the pure Python code\nwhich runs in Python 2.7/3.5+ on all platforms.  While not as fast as the\nbinary protocol, the pure Python interface is more portable.\n\n## Linux Library Dependencies\n\nSome Linux distributions may not install all of the needed shared libraries\nby default.  Most notably, the shared library `libnuma.so.1` is required to\nmake binary protocol connections to CAS.  If you do not have this library on\nyour machine you can install the `numactl` package for your distribution\nto make it available to SWAT.\n\n## Python Dependencies\n\nThe SWAT package uses many features of the Pandas Python package and other\ndependencies of Pandas.  If you do not already have version 0.16.0 or greater\nof Pandas installed, `pip` will install or update it for you when you\ninstall SWAT.\n\n\n# Installation\n\nSWAT can be installed using `pip` or `conda` (if you are using Anaconda)::\n\n    pip install swat\n    \n    conda install -c sas-institute swat\n    \nYou can also install from the files on the \n[SWAT project releases page](https://github.com/sassoftware/python-swat/releases).\nSimply locate the file for your platform and install it using `pip` as \nfollows:\n\n    pip install https://github.com/sassoftware/python-swat/releases/download/vX.X.X/python-swat-X.X.X-platform.tar.gz\n\nWhere `X.X.X` is the release you want to install, and `platform` is the \nplatform you are installing on.  You can also use the source code distribution\nif you only want to use the CAS REST interface.  It does not contain support\nfor the binary protocol.\n\n\n# Getting Started\n\nFor the full documentation go to \n[sassoftware.github.io/python-swat](https://sassoftware.github.io/python-swat/).\nA simple example is shown below.\n\nOnce you have SWAT installed and you have a CAS server to connect to,\nyou can import swat and create a connection::\n\n    >>> import swat\n    >>> conn = swat.CAS(host, port, username, password)\n\nNote the default port for the Python SWAT connection is 5570.\n\nIf you get an error message about the **TCP/IP negClientSSL support routine**, you \nlikely have an issue with your SSL certificate configuration.  See the \n[Encryption](https://sassoftware.github.io/python-swat/encryption.html) documentation\nfor more information.\n\nIf that is successful, you should be able to run an action on the\nCAS server::\n\n    >>> out = conn.serverstatus()\n    NOTE: Grid node action status report: 1 nodes, 6 total actions executed.\n    >>> print(out)\n    [About]\n    \n     {'CAS': 'Cloud Analytic Services',\n      'Copyright': 'Copyright \u00a9 2014-2016 SAS Institute Inc. All Rights Reserved.',\n      'System': {'Hostname': 'cas01',\n       'Model Number': 'x86_64',\n       'OS Family': 'LIN X64',\n       'OS Name': 'Linux',\n       'OS Release': '2.6.32-504.12.2.el6.x86_64',\n       'OS Version': '#1 SMP Sun Feb 1 12:14:02 EST 2015'},\n      'Version': '3.01',\n      'VersionLong': 'V.03.01M0D08232016',\n      'license': {'expires': '20Oct2016:00:00:00',\n       'gracePeriod': 62,\n       'site': 'SAS Institute Inc.',\n       'siteNum': 1,\n       'warningPeriod': 31}}\n    \n    [server]\n    \n     Server Status\n    \n        nodes  actions\n     0      1        6\n    \n    [nodestatus]\n    \n     Node Status\n    \n         name        role  uptime  running  stalled\n     0  cas01  controller   4.836        0        0\n    \n    + Elapsed: 0.0168s, user: 0.016s, sys: 0.001s, mem: 0.287mb\n\n    >>> conn.close()\n\n# Contributing \nThe [Contributor Agreement](https://github.com/sassoftware/python-swat/blob/master/ContributorAgreement.txt) details on how contributions can be made to the project. The [Contributing](https://github.com/sassoftware/python-swat/blob/master/CONTRIBUTING.md) includes instructions and rules as it relates to making contributions on the project. \n\n# Licensing \nThe [LICENSE.md](https://github.com/sassoftware/python-swat/blob/master/LICENSE.md) states how this package is released and licensed. \n\n# Additional Resources\n- [Python-SWAT API Documentation](https://sassoftware.github.io/python-swat/)\n- [SAS Viya Documentation](https://support.sas.com/documentation/onlinedoc/viya/index.html)\n- [Q&A Support](https://communities.sas.com/t5/SAS-Viya-Coders-Library/tkb-p/cas%40tkb)\n- [Python](http://www.python.org/)\n- [SAS Viya](http://www.sas.com/en_us/software/viya.html)\n\n", "long_description_content_type": "text/markdown", "author": "SAS", "author_email": "Kevin.Smith@sas.com", "url": "http://github.com/sassoftware/python-swat/", "license": "Apache v2.0 (SWAT) + SAS Additional Functionality (SAS TK)", "packages": [], "package_data": {"swat": ["lib/*/*.*", "tests/datasources/*.*"]}, "install_requires": ["pandas >= 0.16.0", "pytz", "six >= 1.9.0", "requests"], "platforms": "any", "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Science/Research", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Scientific/Engineering"]}
